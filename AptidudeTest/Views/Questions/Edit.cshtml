@model AptidudeTest.Models.Question

@{
	ViewData["Title"] = "Edit";
	IEnumerable<Choice> choices = ViewData["Choice"] as IEnumerable<Choice>;
	char c = 'A';
}


<h1>Edit</h1>

<h4>Question</h4>
<hr />
<div class="row">
	<div class="col-md-4">
		<form asp-action="Edit">
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>
			<input type="hidden" asp-for="Id" />
			<div class="form-group">
				<label asp-for="Image" class="control-label"></label>
				<input asp-for="Image" value="none" class="form-control" />
				<span asp-validation-for="Image" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="Text" class="control-label"></label>
				<input asp-for="Text" class="form-control" />
				<span asp-validation-for="Text" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="Point" class="control-label"></label>
				<input asp-for="Point" class="form-control" />
				<span asp-validation-for="Point" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="ExamId" class="control-label"></label>
				<input asp-for="ExamId" type="hidden" class="form-control" value="@ViewData["ExamId"]" />
				<span asp-validation-for="ExamId" class="text-danger"></span>
			</div>
			<div class="form-group">
				<input type="submit" value="Save" class="btn btn-primary" />
			</div>
		</form>
	</div>
</div>

<table class="table">
	<thead>
		<tr>
			<th>
				#
			</th>
			<th>
				Content
			</th>
			<th>
				Is Correct
			</th>

			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in choices)
		{
			<tr>
				<td>@c</td>
				<td>@item.Text</td>
				<td>@item.IsCorrect</td>
				
			</tr>
			c++;
		}
	</tbody>
<div>
        <a asp-action="Index" asp-controller="Choices" asp-route-id="@Model?.Id">Edit Choices</a>

	<a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
	await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
}
